---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pihole-etc
  namespace: network
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
  labels:
    io.portainer.kubernetes.application.stack: pihole
    app.kubernetes.io/name: pihole
    app.kubernetes.io/version: "2024.07.0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pihole-dnsmasq
  namespace: network
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
  labels:
    io.portainer.kubernetes.application.stack: pihole
    app.kubernetes.io/name: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---
kind: Service
apiVersion: v1
metadata:
  name: pihole
  namespace: network
  labels:
    io.portainer.kubernetes.application.stack: pihole
    app.kubernetes.io/name: pihole
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: pihole-admin
  - port: 53
    targetPort: 53
    protocol: TCP
    name: dns-tcp
  - port: 53
    targetPort: 53
    protocol: UDP
    name: dns-udp
  selector:
    app.kubernetes.io/name: pihole

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: pihole
  namespace: network
  labels:
    io.portainer.kubernetes.application.stack: pihole
    app.kubernetes.io/name: pihole
    app.kubernetes.io/version: "2024.07.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pihole
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pihole
    spec:
      volumes:
        - name: data-etc
          persistentVolumeClaim:
            claimName: pihole-etc
        - name: data-dnsmasq
          persistentVolumeClaim:
            claimName: pihole-dnsmasq
      containers:
        - name: pihole
          image: pihole/pihole:2024.07.0
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "America/Denver"
            - name: WEBPASSWORD
              value: "admin"
          volumeMounts:
            - name: data-etc
              mountPath: "/etc/pihole"
            - name: data-dnsmasq
              mountPath: "/etc/dnsmasq.d"
          ports:
            - name: pihole-admin
              containerPort: 80
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 9443
          #     scheme: HTTPS
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 9443
          #     scheme: HTTPS
