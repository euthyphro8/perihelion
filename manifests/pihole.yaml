---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pihole
  namespace: network
  annotations:
    nfs.io/storage-path: "pihole"
  labels:
    io.portainer.kubernetes.application.stack: pihole
    app.kubernetes.io/name: pihole
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
kind: Service
apiVersion: v1
metadata:
  name: pihole
  namespace: network
  labels:
    io.portainer.kubernetes.application.stack: pihole
    app.kubernetes.io/name: pihole
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: pihole-admin
    - port: 53
      targetPort: 53
      protocol: TCP
      name: dns-tcp
    - port: 53
      targetPort: 53
      protocol: UDP
      name: dns-udp
  selector:
    app.kubernetes.io/name: pihole

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: pihole
  namespace: network
  labels:
    io.portainer.kubernetes.application.stack: pihole
    app.kubernetes.io/name: pihole
    app.kubernetes.io/version: "2024.07.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: pihole
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pihole
    spec:
      volumes:
        - name: pihole-data
          persistentVolumeClaim:
            claimName: pihole
      containers:
        - name: pihole
          image: pihole/pihole:2024.07.0
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "America/Denver"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: PIHOLE_PASSWORD
          volumeMounts:
            - name: pihole-data
              mountPath: "/etc/pihole"
              subPath: "pihole"
            - name: pihole-data
              mountPath: "/etc/dnsmasq.d"
              subPath: "dnsmasq.d"
          ports:
            - name: pihole-admin
              containerPort: 80
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
