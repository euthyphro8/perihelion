---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: phis-standard
provisioner: nfs.csi.k8s.io
parameters:
  server: 192.168.1.212
  share: /media/storage
  # subDir: standard
reclaimPolicy: Retain
volumeBindingMode: Immediate
allowVolumeExpansion: true
mountOptions:
  - nfsvers=4.1

# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   annotations:
#     pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
#   name: phis-standard
# spec:
#   capacity:
#     storage: 100Gi
#   accessModes:
#     - ReadWriteMany
#   persistentVolumeReclaimPolicy: Retain
#   storageClassName: nfs-csi
#   mountOptions:
#     - nfsvers=4.1
#   csi:
#     driver: nfs.csi.k8s.io
#     volumeHandle: phis1#standard
#     volumeAttributes:
#       server: 192.168.1.212
#       share: /media/storage
#       # subDir: standard
#       onDelete: Retain

# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   name: phis-standard-claim-example
#   namespace: default
# spec:
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 10Gi
#   volumeName: phis-standard
#   storageClassName: nfs-csi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: phis-standard-claim-example
  namespace: default
spec:
  securityContext:
    runAsUser: 1000
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: phis-standard

# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   annotations:
#     pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
#   name: phis-nearline
# spec:
#   capacity:
#     storage: 500Gi
#   accessModes:
#     - ReadWriteMany
#   persistentVolumeReclaimPolicy: Retain
#   storageClassName: nfs-csi
#   mountOptions:
#     - nfsvers=4.1
#   csi:
#     driver: nfs.csi.k8s.io
#     volumeHandle: phis1#nearline
#     volumeAttributes:
#       server: 192.168.1.212
#       share: /media/storage
#       # subDir: nearline
#       onDelete: Retain

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: phis-nearline-claim-example
#   namespace: default
# spec:
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 100Gi
#   volumeName: phis-nearline
#   storageClassName: nfs-csi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-nfs
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deployment-nfs
  template:
    metadata:
      name: deployment-nfs
      labels:
        name: deployment-nfs
    spec:
      nodeSelector:
        'kubernetes.io/os': linux
      containers:
        - name: deployment-nfs
          image: nginx
          command:
            - '/bin/bash'
            - '-c'
            - set -euo pipefail; while true; do echo $(hostname) $(date) >> /mnt/nfs/outfile; sleep 1; done
          volumeMounts:
            - name: nfs
              mountPath: '/mnt/nfs'
              readOnly: false
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: phis-standard-claim-example
