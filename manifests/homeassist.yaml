# Docker Compose for reference
# services:
#   homeassistant:
#     container_name: homeassistant
#     image: "ghcr.io/home-assistant/home-assistant:stable"
#     volumes:
#       - /PATH_TO_YOUR_CONFIG:/config
#       - /etc/localtime:/etc/localtime:ro
#       - /run/dbus:/run/dbus:ro
#     restart: unless-stopped
#     privileged: true
#     network_mode: host


---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local
  namespace: apps
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: homeassist-cfg
  namespace: apps
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
  labels:
    io.portainer.kubernetes.application.stack: homeassist
    app.kubernetes.io/name: homeassist
    app.kubernetes.io/instance: homeassist
    app.kubernetes.io/version: "2024.07.0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: homeassist-dnsmasq
  namespace: apps
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
  labels:
    io.portainer.kubernetes.application.stack: homeassist
    app.kubernetes.io/name: homeassist
    app.kubernetes.io/instance: homeassist
    app.kubernetes.io/version: "2024.07.0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---
kind: Service
apiVersion: v1
metadata:
  name: homeassist
  namespace: apps
  labels:
    io.portainer.kubernetes.application.stack: homeassist
    app.kubernetes.io/name: homeassist
    app.kubernetes.io/instance: homeassist
    app.kubernetes.io/version: "2024.07.0"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: homeassist-admin
  - port: 53
    targetPort: 53
    protocol: TCP
    name: dns-tcp
  - port: 53
    targetPort: 53
    protocol: UDP
    name: dns-udp
  selector:
    app.kubernetes.io/name: homeassist
    app.kubernetes.io/instance: homeassist

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: homeassist
  namespace: apps
  labels:
    io.portainer.kubernetes.application.stack: homeassist
    app.kubernetes.io/name: homeassist
    app.kubernetes.io/instance: homeassist
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homeassist
      app.kubernetes.io/instance: homeassist
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homeassist
        app.kubernetes.io/instance: homeassist
    spec:
      volumes:
        - name: data-etc
          persistentVolumeClaim:
            claimName: homeassist-etc
        - name: data-dnsmasq
          persistentVolumeClaim:
            claimName: homeassist-dnsmasq
      containers:
        - name: homeassist
          image: "ghcr.io/home-assistant/home-assistant:2025.1.1"
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "America/Denver"
            - name: WEBPASSWORD
              value: "primarily-vending-kebab"
          volumeMounts:
            - name: data-etc
              mountPath: "/etc/homeassist"
            - name: data-dnsmasq
              mountPath: "/etc/dnsmasq.d"
          ports:
            - name: homeassist-admin
              containerPort: 80
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP